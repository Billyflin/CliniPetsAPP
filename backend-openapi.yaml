openapi: "3.1.0"
info:
  title: "backend API"
  description: "backend API"
  version: "1.0.0"
servers:
  - url: "https://backend"
tags:
  - name: "Catálogo"
    description: "Gestión de procedimientos y ofertas de veterinarios"
  - name: "Disponibilidad"
    description: "Reglas de disponibilidad y slots de atención"
  - name: "Reservas"
    description: "Creación y gestión del ciclo de vida de reservas"
  - name: "Clínica"
    description: "Acciones clínicas: crear consulta y sugerencias"
  - name: "Veterinarios"
    description: "Gestión de perfiles públicos/privados de veterinarios"
  - name: "Inventario"
    description: "Inventario interno: productos, stock y reservas de insumos"
  - name: "Descubrimiento"
    description: "Búsqueda pública de veterinarias cercanas y sus ofertas"
  - name: "Mascotas"
    description: "ABM de mascotas del cliente"
  - name: "Auth"
    description: "Autenticación y obtención de perfil JWT"
paths:
  /api/catalogo/procedimientos/{id}:
    put:
      summary: "Editar procedimiento"
      description: "Actualiza nombre y categoría de un procedimiento."
      operationId: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID del procedimiento"
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertProcedimiento"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProcedimientoDto"
    delete:
      summary: "Borrar procedimiento"
      description: "Elimina el procedimiento indicado si no está en uso."
      operationId: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID del procedimiento"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "No Content"
  /api/catalogo/ofertas/{ofertaId}:
    put:
      summary: "Editar oferta"
      description: "Actualiza una oferta del veterinario (propietario o ADMIN)."
      operationId: ""
      parameters:
        - name: "ofertaId"
          in: "path"
          required: true
          description: "ID de la oferta a editar"
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertOferta"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfertaDto"
    delete:
      summary: "Borrar oferta"
      description: "Elimina la oferta indicada (propietario o ADMIN)."
      operationId: ""
      parameters:
        - name: "ofertaId"
          in: "path"
          required: true
          description: "ID de la oferta"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "No Content"
  /api/catalogo/procedimientos:
    post:
      summary: "Crear procedimiento"
      description: "Crea un procedimiento del catálogo global. Requiere rol ADMIN."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertProcedimiento"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProcedimientoDto"
    get:
      summary: "Listar procedimientos"
      description: "Filtra por texto (q) y/o categoría. Devuelve el catálogo de procedimientos\
        \ base."
      operationId: ""
      parameters:
        - name: "q"
          in: "query"
          required: false
          description: "Texto a buscar en nombre del procedimiento"
          schema:
            type: "string"
        - name: "categoria"
          in: "query"
          required: false
          description: "Categoría exacta del procedimiento"
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProcedimientoDto"
  /api/catalogo/ofertas:
    post:
      summary: "Crear oferta"
      description: "Crea una oferta para el veterinario autenticado."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertOferta"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfertaDto"
    get:
      summary: "Listar ofertas"
      description: "Filtra por vetId, procedimientoId y estado (activo). Devuelve\
        \ ofertas publicadas."
      operationId: ""
      parameters:
        - name: "vetId"
          in: "query"
          required: false
          description: "ID del veterinario propietario de la oferta"
          schema:
            type: "string"
            format: "uuid"
        - name: "procedimientoId"
          in: "query"
          required: false
          description: "ID del procedimiento referenciado por la oferta"
          schema:
            type: "string"
            format: "uuid"
        - name: "activo"
          in: "query"
          required: false
          description: "Solo ofertas activas (true por defecto)"
          schema:
            type: "boolean"
            default: "true"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/OfertaDto"
  /api/agenda/disponibilidad/reglas:
    put:
      summary: "Upsert reglas"
      description: "Reemplaza reglas semanales y excepciones para un veterinario."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReglasRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OkResponse"
  /api/agenda/disponibilidad/slots:
    get:
      summary: "Listar slots"
      description: "Devuelve los slots disponibles entre from y to (UTC, ISO-8601)."
      operationId: ""
      parameters:
        - name: "vetId"
          in: "query"
          required: true
          description: "ID del veterinario"
          schema:
            type: "string"
            format: "uuid"
        - name: "from"
          in: "query"
          required: true
          description: "Inicio ventana (ISO-8601 UTC)"
          schema:
            type: "string"
        - name: "to"
          in: "query"
          required: true
          description: "Fin ventana (ISO-8601 UTC)"
          schema:
            type: "string"
        - name: "ofertaId"
          in: "query"
          required: false
          description: "Oferta opcional para filtrar"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/SlotDto"
  /api/agenda/disponibilidad/open-now:
    get:
      summary: "¿Abierto ahora?"
      description: "Indica si el veterinario está abierto en este momento (UTC)."
      operationId: ""
      parameters:
        - name: "vetId"
          in: "query"
          required: true
          description: "ID del veterinario"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OpenNowResponse"
  /api/publico/descubrimiento/_demo/open-now:
    post:
      summary: "POST api/publico/descubrimiento/_demo/open-now"
      operationId: "demoOpenNow"
      parameters:
        - name: "vetId"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "uuid"
        - name: "openNow"
          in: "query"
          required: true
          schema:
            type: "boolean"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/publico/descubrimiento/_demo/near/{bucket}:
    post:
      summary: "POST api/publico/descubrimiento/_demo/near/{bucket}"
      operationId: "demoNear"
      parameters:
        - name: "bucket"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /api/agenda/reservas/{reservaId}/aceptar:
    put:
      summary: "Aceptar"
      description: "Transiciona la reserva a ACEPTADA."
      operationId: ""
      parameters:
        - name: "reservaId"
          in: "path"
          required: true
          description: "ID de la reserva"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservaDto"
  /api/agenda/reservas/{reservaId}/rechazar:
    put:
      summary: "Rechazar"
      description: "Transiciona la reserva a RECHAZADA."
      operationId: ""
      parameters:
        - name: "reservaId"
          in: "path"
          required: true
          description: "ID de la reserva"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservaDto"
  /api/agenda/reservas/{reservaId}/cancelar:
    put:
      summary: "Cancelar"
      description: "Transiciona la reserva a CANCELADA."
      operationId: ""
      parameters:
        - name: "reservaId"
          in: "path"
          required: true
          description: "ID de la reserva"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservaDto"
  /api/agenda/reservas/{reservaId}/completar:
    put:
      summary: "Completar"
      description: "Transiciona la reserva a COMPLETADA."
      operationId: ""
      parameters:
        - name: "reservaId"
          in: "path"
          required: true
          description: "ID de la reserva"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservaDto"
  /api/agenda/reservas:
    post:
      summary: "Crear reserva"
      description: "Crea una nueva reserva a partir de mascota y oferta."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrearReserva"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservaDto"
  /api/agenda/reservas/mias:
    get:
      summary: "Mis reservas"
      description: "Lista las reservas del usuario autenticado."
      operationId: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ReservaDto"
  /api/agenda/reservas/{reservaId}:
    get:
      summary: "Detalle de reserva"
      description: "Obtiene el detalle de una reserva por su ID."
      operationId: ""
      parameters:
        - name: "reservaId"
          in: "path"
          required: true
          description: "ID de la reserva"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservaDto"
  /api/clinica/consultas:
    post:
      summary: "Crear consulta"
      description: "Registra una consulta asociada a una reserva."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrearConsulta"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CrearConsultaResponse"
  /api/clinica/sugerencias:
    post:
      summary: "Obtener sugerencias"
      description: "Devuelve sugerencias generales según especie y síntomas."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SugerenciasRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Sugerencia"
  /api/veterinarios/mi-perfil:
    put:
      summary: "Actualizar mi perfil"
      description: "Crea/actualiza el perfil del veterinario autenticado."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpsertPerfil"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MiPerfilDto"
  /api/veterinarios/{vetId}/verificar:
    put:
      summary: "Verificar veterinario"
      description: "Marca un veterinario como verificado (ADMIN)."
      operationId: ""
      parameters:
        - name: "vetId"
          in: "path"
          required: true
          description: "ID del veterinario"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/VerificarResponse"
  /api/veterinarios/publicos:
    get:
      summary: "Listar veterinarios públicos"
      description: "Devuelve una lista de perfiles públicos."
      operationId: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PublicVetDto"
  /api/veterinarios/{vetId}:
    get:
      summary: "Perfil público"
      description: "Obtiene el perfil público de un veterinario."
      operationId: ""
      parameters:
        - name: "vetId"
          in: "path"
          required: true
          description: "ID del veterinario"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PublicVetDto"
  /api/inventario/productos:
    post:
      summary: "Crear producto"
      description: "Crea un producto de inventario (endpoint de ejemplo/stub)."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductoUpsert"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductoDto"
    get:
      summary: "Listar productos"
      description: "Devuelve productos del catálogo interno de inventario."
      operationId: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ProductoDto"
  /api/inventario/internal/reservas:
    post:
      summary: "Reservar insumos"
      description: "Reserva insumos para una atención (endpoint demo)."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservaStockRequest"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OkResponse"
  /api/inventario/internal/reservas/{bookingId}:
    delete:
      summary: "Liberar reserva de insumos"
      description: "Elimina la reserva de insumos (endpoint demo)."
      operationId: ""
      parameters:
        - name: "bookingId"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "No Content"
  /api/inventario/stock:
    get:
      summary: "Consultar stock"
      description: "Consulta stock por ubicación y/o SKU (endpoint demo)."
      operationId: ""
      parameters:
        - name: "ubicacionId"
          in: "query"
          required: false
          schema:
            type: "string"
            format: "uuid"
        - name: "sku"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/StockItemDto"
  /api/publico/descubrimiento:
    get:
      summary: "Buscar veterinarias cercanas"
      description: "Devuelve veterinarias ordenadas por distancia desde lat/lon dentro\
        \ de un radio dado."
      operationId: ""
      parameters:
        - name: "lat"
          in: "query"
          required: true
          description: "Latitud en grados decimales"
          schema:
            type: "number"
            format: "double"
        - name: "lon"
          in: "query"
          required: true
          description: "Longitud en grados decimales"
          schema:
            type: "number"
            format: "double"
        - name: "radio"
          in: "query"
          required: true
          description: "Radio en metros"
          schema:
            type: "integer"
            format: "int32"
        - name: "procedimientoId"
          in: "query"
          required: false
          description: "Filtrar por procedimiento"
          schema:
            type: "string"
            format: "uuid"
        - name: "abiertoAhora"
          in: "query"
          required: false
          description: "Solo abiertas ahora"
          schema:
            type: "boolean"
        - name: "conStock"
          in: "query"
          required: false
          description: "Solo con stock disponible"
          schema:
            type: "boolean"
        - name: "limit"
          in: "query"
          required: false
          description: "Límite de resultados"
          schema:
            type: "integer"
            format: "int32"
            default: "50"
        - name: "offset"
          in: "query"
          required: false
          description: "Desplazamiento para paginar"
          schema:
            type: "integer"
            format: "int32"
            default: "0"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DiscoveryResult"
  /api/mascotas/{id}:
    put:
      summary: "Actualizar mascota"
      description: "Actualiza datos básicos de la mascota."
      operationId: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID de la mascota"
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActualizarMascota"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Mascota"
    delete:
      summary: "Eliminar mascota"
      description: "Elimina una mascota propia."
      operationId: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID de la mascota"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "No Content"
    get:
      summary: "Detalle de mascota"
      description: "Obtiene una mascota por su ID (propietario o ADMIN)."
      operationId: ""
      parameters:
        - name: "id"
          in: "path"
          required: true
          description: "ID de la mascota"
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Mascota"
  /api/mascotas:
    post:
      summary: "Crear mascota"
      description: "Crea una mascota asociada al usuario autenticado."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CrearMascota"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Mascota"
  /api/mascotas/mias:
    get:
      summary: "Listar mis mascotas"
      description: "Devuelve las mascotas del usuario autenticado."
      operationId: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Mascota"
  /api/auth/google:
    post:
      summary: "Login con Google ID Token"
      description: "Intercambia un Google ID Token válido por un JWT propio."
      operationId: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleLoginRequest"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/auth/me:
    get:
      summary: "Mi perfil"
      description: "Devuelve información básica del usuario autenticado."
      operationId: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MeResponse"
components:
  schemas:
    UpsertProcedimiento:
      type: "object"
      properties:
        nombre:
          type: "string"
        categoria:
          type: "string"
      required:
        - "nombre"
        - "categoria"
    ProcedimientoDto:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          nullable: true
        nombre:
          type: "string"
        categoria:
          type: "string"
      required:
        - "nombre"
        - "categoria"
    UpsertOferta:
      type: "object"
      properties:
        procedimientoId:
          type: "string"
          format: "uuid"
        precioCents:
          type: "integer"
          format: "int32"
        duracionMin:
          type: "integer"
          format: "int32"
        activo:
          type: "boolean"
      required:
        - "procedimientoId"
        - "precioCents"
        - "duracionMin"
        - "activo"
    OfertaDto:
      type: "object"
      properties:
        ofertaId:
          type: "string"
          format: "uuid"
          nullable: true
        vetId:
          type: "string"
          format: "uuid"
        procedimientoId:
          type: "string"
          format: "uuid"
          nullable: true
        nombre:
          type: "string"
        precioCents:
          type: "integer"
          format: "int32"
        duracionMin:
          type: "integer"
          format: "int32"
        activo:
          type: "boolean"
      required:
        - "vetId"
        - "nombre"
        - "precioCents"
        - "duracionMin"
        - "activo"
    ReglaSemanalIn:
      type: "object"
      properties:
        dia:
          type: "integer"
          format: "int32"
        inicio:
          type: "string"
        fin:
          type: "string"
      required:
        - "dia"
        - "inicio"
        - "fin"
    ExcepcionIn:
      type: "object"
      properties:
        fecha:
          type: "string"
        cerrado:
          type: "boolean"
        inicio:
          type: "string"
          nullable: true
        fin:
          type: "string"
          nullable: true
      required:
        - "fecha"
        - "cerrado"
    ReglasRequest:
      type: "object"
      properties:
        vetId:
          type: "string"
          format: "uuid"
        semanal:
          type: "array"
          items:
            $ref: "#/components/schemas/ReglaSemanalIn"
        excepciones:
          type: "array"
          items:
            $ref: "#/components/schemas/ExcepcionIn"
      required:
        - "vetId"
        - "semanal"
        - "excepciones"
    OkResponse:
      type: "object"
      properties:
        ok:
          type: "boolean"
      required:
        - "ok"
    SlotDto:
      type: "object"
      properties:
        inicio:
          type: "string"
        fin:
          type: "string"
      required:
        - "inicio"
        - "fin"
    OpenNowResponse:
      type: "object"
      properties:
        openNow:
          type: "boolean"
      required:
        - "openNow"
    ReservaDto:
      type: "object"
      properties:
        reservaId:
          type: "string"
          format: "uuid"
          nullable: true
        mascotaId:
          type: "string"
          format: "uuid"
        ofertaId:
          type: "string"
          format: "uuid"
        inicio:
          type: "string"
        estado:
          type: "string"
          enum:
            - "PENDIENTE"
            - "ACEPTADA"
            - "RECHAZADA"
            - "CANCELADA"
            - "COMPLETADA"
        nota:
          type: "string"
          nullable: true
      required:
        - "mascotaId"
        - "ofertaId"
        - "inicio"
        - "estado"
    CrearReserva:
      type: "object"
      properties:
        mascotaId:
          type: "string"
          format: "uuid"
        ofertaId:
          type: "string"
          format: "uuid"
        inicio:
          type: "string"
        nota:
          type: "string"
          nullable: true
      required:
        - "mascotaId"
        - "ofertaId"
        - "inicio"
    UsedSku:
      type: "object"
      properties:
        sku:
          type: "string"
        qty:
          type: "integer"
          format: "int32"
      required:
        - "sku"
        - "qty"
    CrearConsulta:
      type: "object"
      properties:
        reservaId:
          type: "string"
          format: "uuid"
        diagnostico:
          type: "string"
        usedSkus:
          type: "array"
          items:
            $ref: "#/components/schemas/UsedSku"
      required:
        - "reservaId"
        - "diagnostico"
        - "usedSkus"
    CrearConsultaResponse:
      type: "object"
      properties:
        consultaId:
          type: "string"
          format: "uuid"
      required:
        - "consultaId"
    SugerenciasRequest:
      type: "object"
      properties:
        especie:
          type: "string"
        sintomas:
          type: "array"
          items:
            type: "string"
        edad:
          type: "string"
        pesoKg:
          type: "number"
          format: "double"
      required:
        - "especie"
        - "sintomas"
        - "edad"
        - "pesoKg"
    Sugerencia:
      type: "object"
      properties:
        titulo:
          type: "string"
        detalle:
          type: "string"
      required:
        - "titulo"
        - "detalle"
    UpsertPerfil:
      type: "object"
      properties:
        nombre:
          type: "string"
          nullable: true
        bio:
          type: "string"
          nullable: true
        latitud:
          type: "number"
          format: "double"
          nullable: true
        longitud:
          type: "number"
          format: "double"
          nullable: true
    MiPerfilDto:
      type: "object"
      properties:
        vetId:
          type: "string"
          format: "uuid"
        nombre:
          type: "string"
        bio:
          type: "string"
          nullable: true
        latitud:
          type: "number"
          format: "double"
          nullable: true
        longitud:
          type: "number"
          format: "double"
          nullable: true
      required:
        - "vetId"
        - "nombre"
    VerificarResponse:
      type: "object"
      properties:
        vetId:
          type: "string"
          format: "uuid"
        verificado:
          type: "boolean"
      required:
        - "vetId"
        - "verificado"
    PublicVetDto:
      type: "object"
      properties:
        vetId:
          type: "string"
          format: "uuid"
        nombre:
          type: "string"
        verificado:
          type: "boolean"
        latitud:
          type: "number"
          format: "double"
        longitud:
          type: "number"
          format: "double"
      required:
        - "vetId"
        - "nombre"
        - "verificado"
        - "latitud"
        - "longitud"
    ProductoUpsert:
      type: "object"
      properties:
        sku:
          type: "string"
        nombre:
          type: "string"
        categoria:
          type: "string"
      required:
        - "sku"
        - "nombre"
        - "categoria"
    ProductoDto:
      type: "object"
      properties:
        sku:
          type: "string"
        nombre:
          type: "string"
        categoria:
          type: "string"
      required:
        - "sku"
        - "nombre"
        - "categoria"
    ReserveItem:
      type: "object"
      properties:
        sku:
          type: "string"
        qty:
          type: "integer"
          format: "int32"
      required:
        - "sku"
        - "qty"
    ReservaStockRequest:
      type: "object"
      properties:
        bookingId:
          type: "string"
          format: "uuid"
        vetId:
          type: "string"
          format: "uuid"
        ubicacionId:
          type: "string"
          format: "uuid"
          nullable: true
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/ReserveItem"
      required:
        - "bookingId"
        - "vetId"
        - "items"
    StockItemDto:
      type: "object"
      properties:
        ubicacionId:
          type: "string"
          format: "uuid"
        sku:
          type: "string"
        qty:
          type: "integer"
          format: "int32"
      required:
        - "ubicacionId"
        - "sku"
        - "qty"
    OfertaItem:
      type: "object"
      properties:
        ofertaId:
          type: "string"
          format: "uuid"
        procedimientoId:
          type: "string"
          format: "uuid"
        nombre:
          type: "string"
        precioCents:
          type: "integer"
          format: "int32"
        conStock:
          type: "boolean"
      required:
        - "ofertaId"
        - "procedimientoId"
        - "nombre"
        - "precioCents"
        - "conStock"
    VetItem:
      type: "object"
      properties:
        vetId:
          type: "string"
          format: "uuid"
        nombre:
          type: "string"
        distanciaM:
          type: "integer"
          format: "int32"
        openNow:
          type: "boolean"
        lat:
          type: "number"
          format: "double"
        lon:
          type: "number"
          format: "double"
        ofertas:
          type: "array"
          items:
            $ref: "#/components/schemas/OfertaItem"
      required:
        - "vetId"
        - "nombre"
        - "distanciaM"
        - "openNow"
        - "lat"
        - "lon"
        - "ofertas"
    DiscoveryResult:
      type: "object"
      properties:
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/VetItem"
        nextOffset:
          type: "integer"
          format: "int32"
      required:
        - "items"
        - "nextOffset"
    ActualizarMascota:
      type: "object"
      properties:
        nombre:
          type: "string"
          nullable: true
        especie:
          type: "string"
          nullable: true
          enum:
            - "PERRO"
            - "GATO"
        raza:
          type: "string"
          nullable: true
        sexo:
          type: "string"
          nullable: true
        fechaNacimiento:
          type: "string"
          format: "date"
          nullable: true
        pesoKg:
          type: "number"
          format: "double"
          nullable: true
    Instant:
      type: "object"
      properties: { }
    Mascota:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          nullable: true
        nombre:
          type: "string"
        especie:
          type: "string"
          enum:
            - "PERRO"
            - "GATO"
        raza:
          type: "string"
          nullable: true
        sexo:
          type: "string"
          nullable: true
        fechaNacimiento:
          type: "string"
          format: "date"
          nullable: true
        pesoKg:
          type: "number"
          format: "double"
          nullable: true
        tutorId:
          type: "string"
          format: "uuid"
        creadoEn:
          $ref: "#/components/schemas/Instant"
        modificadoEn:
          $ref: "#/components/schemas/Instant"
        creadoPor:
          type: "string"
          format: "uuid"
          nullable: true
        modificadoPor:
          type: "string"
          format: "uuid"
          nullable: true
      required:
        - "nombre"
        - "especie"
        - "tutorId"
        - "creadoEn"
        - "modificadoEn"
    CrearMascota:
      type: "object"
      properties:
        nombre:
          type: "string"
        especie:
          type: "string"
          enum:
            - "PERRO"
            - "GATO"
        raza:
          type: "string"
          nullable: true
        sexo:
          type: "string"
          nullable: true
        fechaNacimiento:
          type: "string"
          format: "date"
          nullable: true
        pesoKg:
          type: "number"
          format: "double"
          nullable: true
      required:
        - "nombre"
        - "especie"
    GoogleLoginRequest:
      type: "object"
      properties:
        idToken:
          type: "string"
      required:
        - "idToken"
    TokenResponse:
      type: "object"
      properties:
        token:
          type: "string"
      required:
        - "token"
    MeResponse:
      type: "object"
      properties:
        authenticated:
          type: "boolean"
        id:
          type: "string"
          format: "uuid"
          nullable: true
        email:
          type: "string"
          nullable: true
        roles:
          type: "array"
          nullable: true
          items:
            type: "string"
      required:
        - "authenticated"